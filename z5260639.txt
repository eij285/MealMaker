##########################
#  COMP3900 Work Diary   #
# Goce (George) Pacarski #
#        z5260639        #
##########################

Week 1
=======
Tuesday
--------
First lecture introduced the course including how to plan the project.
I don't know anyone in my tutorial yet and therefore haven't formed a team at
this point (I'm in the Thursday evening in-person tutorial). All the projects
look interesting, however the meal recommendation system would probably be the
one I would pick. The technology stack I'd like to work with includes javascript
(vanilla using fetch/ajax or ReactJS), html, css, SQL (sqlite, mysql/mariadb, or
postgresql), and python (flask, json, etc). The webapp should have a good user
experience, be responsive (i.e. mobile friendly) and secure.

Thursday
---------
The group was formed today, consisting of 5 members. We decided we would do
project 1, the meal recommendation system. We decided Lachlan Bailey would be
the scrum master, and then proceed to create and link Jira and GitHub accounts.
We also decided we would use a 3 sprint structure as this works best with the
two progressive and one final demos. Then we discussed the programming languages
and tools we could use for the project. We considered the most suitable
structure is to use python3 and PostgreSQL for the backend and ReactJS for the
frontend. Next we need to come up with the user stories and objectives for the
project.

Friday
-------
Did some brainstorming regarding what the website should be able to do,
and wrote some user stories. Also did a test run to determine if the current
ReactJS version will work on CSE or Ubuntu 20.04 LTS, which wasn't successful.
These systems must be upgraded to nodejs version 14 or greater, given lower
versions are now EOL, and any attempt to create a ReactJS app fails completely.
A test ReactJS app works correctly on a Debian 11 WSL with upgraded nodejs
(version 16.17.0) and npm (version 8.19.2).

Saturday
---------
Wrote the Background section of the proposal, and added it to confluence.

Sunday
-------
Wrote a guide to installing NodeJS, NPM and Yarn help team members know what
would be needed to build a ReactJS based frontend.

################################################################################

Week 2
=======
Monday
-------
More planning on what technolgies the website would use. Specifically the pros
and cons of using PostgreSQL versus SQLite.

Tuesday
--------
Group meeting. As a groups we came up with seven objectives (epics), and several
more user stories (currently have just over 40 user stories). Grouped those user
stories into objectives. Also came up with several novelties that might be nice
to have. Decided to use SQLite as a database as it's a small website that
doesn't need the complexity of setting up and overhead in running PostgreSQL.

Thursday
---------
Group meeting with tutor over zoom. Created the group on github classroom and
accepted the capstone project. Found out we need to use the repo under
"unsw-cse-comp3900-9900-22T3" rather than a previously created group repo.
Found we misunderstood what novelties actually meant, in that it's meant to
include features other recipe websites don't have. Also found "Dynamic UI" isn't
an objective, thus we need to revise our objectives and user stories further
before coming up with acceptance criteria. Also we got approval on installing
whatever we need on the Lubuntu 20.04 LTS virtual machine, as well as using
SQLite3 and Flask for the backend. Made a start on writing the system
architecture part of the proposal.

Friday
-------
Met up with Jeffrey on Friday evening where we created the remaining objectives
and novelties, along with several additional user stories. I created the first
draft of the system architecture part of the proposal including the diagram in
draw.io. Also created a project in figma and invited the group, which will serve
as the means to create the user storyboard.

Sunday
-------
Added about a dozen screens in figma which will serve basis for storyboards (and
mockups).

################################################################################

Week 3
=======
Tuesday
--------
Group meeting after online lecture. Added a few more screens to figma.

Wednesday
----------
Group meeting. Created several more user stories, and decided on
three novelties being playlists (cook books), chatbox, and shopping cart.
Decided in which sprints most user stories would go in. Still unsure about how
if acceptance criteria is to be created as child issues or user story
descriptions. Also questioning whether to store images in the database or
filesystem.

Thursday
---------
Lab and group meeting. Decided we would use a mix of images stored in the
database and filesystem, where those stored in the database are for user privacy
reasons. Confirmed using child issues of stories and desciptions for acceptance
criteria. Also discussed details regarding objectives and novelties. Decided we
would use PostgreSQL instead of SQLite3, to ensure good performance from the
website. Entered more user stories, and acceptance criteria in Jira.

Friday
-------
Entered more user stories and acceptance criteria in Jira.

Saturday
---------
Group meeting. Confirmed using PostgreSQL and updated the system
architecture to reflect that descision, then added the updated system
architecture content to the proposal. Added user stories especially those
relevant to novelties, and edited existing user stories to ensure they and their
acceptance criteria make sense. Created more screen and storyboards using figma
and draw.io. Some additional worked on the proposal.

Sunday
-------
Added a several more screens to figma and created and/or helped to create the
storyboard using screens from figma. Edited a few user stories and acceptance
criteria in jira. Added some documentation to confluence regarding sprints
including start and end dates, as well as screenshots of the user stories
assigned to each sprint.

################################################################################

Week 4
=======

Monday
-------
Realised that screenshots of the sprints/backlog in Jira perhaps don't meet the
criteria for user stories as readable text. Therefore copied the text of each
user story as bullet points into confluence. Also realised that confluence
doesn't have the functionality to write documents predictably as well formatted
A4 pages thus transferred all the contents into a Google doc to work on the
proposal collaboratively. From there we continued working on the proposal until
it was completed. Everyone contributed an equal share of work, and the proposal
was submitted by Lachlan.

Tuesday
--------
Did the initial database design planning in draw.io. The database currently
has 23 tables, but is perhaps still far from what we ideally want.

Wednesday
----------
Did some research to confirm whether the node and reactjs packages indicated in
the proposal were really the best packages to install for the frontend. Most
were the same, but styled-components was swapped for emotion as this does the
same things for our purposes and seems less problematic as far as compatibility
goes with material UI v5. A few packages were added to make working with dates
and other features better.

Thursday
---------
Was raining today, so had our had a group meeting and talk with our mentor over
zoom. Installed the frontend with agreement on the packages with the other team
members and approval from Lachlan. Discussed with Elijah what the best approach
would be to setting up the backend directory structure such as to not end up
with too many python files in a single directory. Created a few page layouts in
reactjs and started on the authorisation objective related pages.

Friday
-------
Worked on some of the frontend of the authorisation pages.

Saturday
--------
More work on authorisation pages including validation of emails and passwords.
Spent a lot of time dealing with reactjs v18 and material ui v5 issues that
weren't present in another project that used reactjs v17 and material ui v4.
Specifically the issues relate to the use of React.useState and input onBlur,
onInput, and onChange not working ideally. In the interest of progression with
sprint 1 the auth functions work, and these may need to be optimised if there's
time. Merged everything with main. Another issue is it was found it's not
practical to assign a single user story to a single team member, given every
user story has a frontend and backend component and will therefore involved
multiple team members. Hence the team member assigned to a user story is one of
the people working on that user story but may be two or three others also
working on that same user story.

Sunday
-------
Spent all day working on frontend code including layout and authorisation
functions. Fixed the bug regarding reactjs not accepting user input in form
inputs, unfortunately this resulted in having to rewrite much code. Also
updated the database schema.

################################################################################

Week 5
=======

Monday
-------
Spent all day working on the frontend again, writing the user functionality.
There were many different assumptions between group members on what the frontend
should send the backend and what the backend should send the frontend, as well
as what routes would be needed. Seems like we will need to rewrite some code,
after we agree on these issues along with having a consistent backend
configuration such as database name.

Tuesday
--------
Most of the frontend functionality for sprint 1 has now been built. Signup and
login now work correctly from both a frontend and backend perspective. Had a
group meeting to discuss where everyone is with regards to the sprint 1 demo.
Some group members still had a few different ideas what data should be exchanged
between the backend and frontend, how the database should be structured, and
which http methods should be used to send data. Still have several more screens
to connect to the backend and have some backend functionality that needs to be
fixed. 

Wednesday
----------
I completed the frontend for the authentication and user objectives after much
work and fixing issues with backend and database. Discovered compatability
with different versions of the pyjwt python module installed on linux/wsl and
macos work, thus what works properly in one environment may not in another. Also
did a part of the frontend recipe screens. The recipe screens are more
complicated than the authentication and user screens. Therefore as a group we
will need to be very explicit over how they're intended to work, and how the
database relation data is to be structured.

Thursday
---------
Progressive Demo A was presented today, having completed sprint 1. The demo went
well however it showed the presence of a few bugs which will need to be fixed.

Friday
-------
In the interest of simplifying the application it was decided to store images
in the database. While this isn't ideal for performance, it means not having
to store images in the filesystem or separate routes to retrieve files. This
allows the application to provide the required functionality, while making it
more feasible to meet deadlines. Did some research on a WYSIWYG editor to allow
markup to be added to text, as well as embedding images within content. Best
solution is CKEditor with Base64 image upload. I installed the required node
packages, and made the required changes.

################################################################################

Week 6
=======
Fixed frontend issue relating to login. Rewrote most of the backend code and
database structure relating to recipes. Specifically rewrote backend python code
relevant to creating, editing (retrieving), updating and fetching all recipes.
I feel the backend implementation in certain areas is not really ideal in terms
of adherence to DRY principles, where certain functionality should be delegated
to separate functions. However everyone has their own workflow so don't want to
dwell on code structure and conventions, and instead focus on working code so
that we can meet deadlines. I also implemented the frontend code relevant to
creating, editing (retrieving), updating and fetching recipes.

################################################################################

Week 7
=======
Finished preparation of retrospective A document with team for submission. Also
wrote backend python code relating to recipe, ingredients, serving size
adjustment, units, likes, reviews, review replies, review votes. Also added to
the database schema (SQL file) to allow for the addition of this data. Most of
the time was spent working on the frontend to get recipe, ingredients, serving
size adjustment, units, likes, reviews, review replies, review votes to work
correctly.

################################################################################

Week 8
=======
I worked on implementing a sizable portion of the backend including remaining
recipes and review functionality, as well as fixing some bugs with user backend.
Also worked on implementation of the frontend for the remaining user, recipe,
reviews, search and feed functionality. Started on sprint 3 functionality.

################################################################################

Week 9
=======
This week was mainly spent discussing and deciding on implementation of routes
and what data, and structure of data to be exchanged between frontend and
backend. Being the most experienced database person in the group I also assisted
the team with design and implementation of the remaining database schema. I
really wish the power of a relational database, especially one as powerful as
postgresql was used to it's full capability to efficiently extract data more
often, by using joins and subqueries (it can do a lot more than that) given that
running queries without join in a python loop to extract relational data doesn't
scale well (too much overhead). Quite understandable given different different
levels of experience with databases among team members, and always offer a hand
to help those in need with frontend or backend code. The group needs are more
important than individual needs, especially true given the great amount of time
and dedication I've contributed to writing most of the project code. We also had
a meeting to discuss retrospective B. I also spent some time building some of
the frontend layout and functionality for cookbook, messages and shopping cart.

################################################################################

Week 10
=======
Worked on completing everything in sprint 3 and the report this week ready for
the final presentation and submission.
